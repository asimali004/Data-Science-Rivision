# -*- coding: utf-8 -*-
"""DS_D16_Classification_Evaluation_Metrics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qtwrLXGZeg-oVycZRYO0nFAqFz-Nnx6g
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv("insurance.csv")
df.sample(5)
df.info()
df.describe()
df.head(2)
x = df.iloc[:,[0,1,2,3,5,6]]
y = pd.DataFrame(df.iloc[:,4])
from sklearn.preprocessing import LabelEncoder,OneHotEncoder,StandardScaler
x.head(2)
sc = StandardScaler()
le = LabelEncoder()
ohe = OneHotEncoder()
x.iloc[:,[0,2,5]] = sc.fit_transform(pd.DataFrame(x.iloc[:,[0,2,5]]))
x.head(2)
dff=pd.DataFrame(ohe.fit_transform(x.iloc[:,[1,4]]).toarray())
x = x.join(dff)
x.head(2)
df.region.unique()
x.columns[[1,4]]
x.drop(x.columns[[1,4]],axis=1,inplace=True)
x.head(2)
y = le.fit_transform(y)
from sklearn.model_selection import train_test_split
xtr,xte,ytr,yte = train_test_split(x,y,test_size=0.3)
from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(criterion = "entropy",random_state=0)
model.fit(xtr,ytr)
ypred = model.predict(xte)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(yte,ypred)
print(cm)
from sklearn.metrics import accuracy_score
acs = accuracy_score(yte,ypred)
print(acs)
from sklearn.metrics import plot_confusion_matrix
plot_confusion_matrix(model,xte,yte)
model.score(xte,yte)

from sklearn.metrics import classification_report

print(classification_report(yte,ypred))

from sklearn.metrics import roc_curve

fpr,tpr,thresh=roc_curve(yte,ypred)

plt.plot(fpr,tpr)

from sklearn.metrics import roc_auc_score

roc_auc_score(yte,ypred)

