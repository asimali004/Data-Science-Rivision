# -*- coding: utf-8 -*-
"""DS_D2_Linear_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16VGrDrF-bi9S80d72k-6U2SXPoWpLV7r
"""

from sklearn.linear_model import LinearRegression

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("heart.csv")

df1 = df.iloc[:,[0,4]]
df1.head()

x=pd.DataFrame(df1.iloc[:,0])
y=pd.DataFrame(df1.iloc[:,1])

reg = LinearRegression()

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)

reg.fit(x_train,y_train)

reg.predict(x_test)

plt.scatter(x_train,y_train)
plt.plot(x_test,reg.predict(x_test),color="g")

plt.scatter(df.Age,df.MaxHR)

x2 = pd.DataFrame(df.Age)
y2 = pd.DataFrame(df.MaxHR)

xtr,xte,ytr,yte=train_test_split(x2,y2,test_size=0.25)

reg2 = LinearRegression()

reg2.fit(xtr,ytr)

plt.scatter(xtr,ytr)
plt.plot(xte,reg2.predict(xte),color='y')

from sklearn.metrics import mean_absolute_error
from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score

print(mean_absolute_error(yte,reg2.predict(xte)))
print(mean_squared_error(yte,reg2.predict(xte)))
print(r2_score(yte,reg2.predict(xte)))

def colnum(a,b,df):
    x=pd.DataFrame(df.iloc[:,a])
    y=pd.DataFrame(df.iloc[:,b])
    reg=LinearRegression()
    xtr,xte,ytr,yte=train_test_split(x,y,test_size=0.3)
    reg.fit(xtr,ytr)
    plt.scatter(xtr,ytr)
    plt.plot(xte,reg.predict(xte),color="r")

colnum(0,3,df)

colnum(0,4,df)

colnum(0,5,df)#classification col, regression not possible

colnum(0,7,df)

colnum(0,9,df)

