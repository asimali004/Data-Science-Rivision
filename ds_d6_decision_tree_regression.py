# -*- coding: utf-8 -*-
"""DS_D6_Decision_Tree_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U51w4Yoy8ZsmPOOKuScMVTzS1l_gZAqK
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("train.csv")
print(df.info())
print(df.describe())

df.dropna(inplace=True)
x = pd.DataFrame(df.iloc[:,0])
y = pd.DataFrame(df.iloc[:,1])
print(x,y)
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error
reg = DecisionTreeRegressor()
xtr,xte,ytr,yte=train_test_split(x,y,test_size=0.3)
print("X Train : ",len(xtr))
print("Y Train : ",len(ytr))
print("X Test : ",len(xte))
print("Y Test : ",len(yte))
reg.fit(xtr,ytr)
y_pr=reg.predict(xte)
plt.scatter(x,y)
plt.plot(xte,y_pr,color="r")
plt.show()
print("Mean Squared Error ",mean_squared_error(yte,y_pr))
print("Mean Absolute Error ",mean_absolute_error(yte,y_pr))
print("R2 Score ",r2_score(yte,y_pr))

x_grid = np.arange(min(x.values),max(x.values),0.1)
x_grid = x_grid.reshape(len(x_grid),1)
plt.figure(figsize=(15,6))
plt.scatter(x,y)
plt.plot(x_grid,reg.predict(x_grid),color="r")
plt.show()

