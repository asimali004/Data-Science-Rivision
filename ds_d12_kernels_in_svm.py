# -*- coding: utf-8 -*-
"""DS_D12_Kernels_in_SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MclBT5dtftT0b7g3jRHLgEGQhXEkqGY0
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv("insurance.csv")
x = df.iloc[:,[0,1,2,3,5,6]]
y = pd.DataFrame(df.iloc[:,4])
from sklearn.preprocessing import LabelEncoder,OneHotEncoder,StandardScaler
sc = StandardScaler()
le = LabelEncoder()
ohe = OneHotEncoder()
x.iloc[:,[0,2,5]] = sc.fit_transform(pd.DataFrame(x.iloc[:,[0,2,5]]))
dff=pd.DataFrame(ohe.fit_transform(x.iloc[:,[1,4]]).toarray())
x = x.join(dff)
x.drop(x.columns[[1,4]],axis=1,inplace=True)
y = le.fit_transform(y)
from sklearn.model_selection import train_test_split
xtr,xte,ytr,yte = train_test_split(x,y,test_size=0.3)
from sklearn.svm import SVC
model = SVC(kernel="linear",random_state=0)
model.fit(xtr,ytr)
ypred = model.predict(xte)
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(yte,ypred)
print(cm)
from sklearn.metrics import accuracy_score
acs = accuracy_score(yte,ypred)
print(acs)
from sklearn.metrics import plot_confusion_matrix
plot_confusion_matrix(model,xte,yte)
plt.show()

model.score(xte,yte)

df = pd.read_csv("insurance.csv")
x = df.iloc[:,[0,1,2,3,5,6]]
y = pd.DataFrame(df.iloc[:,4])
from sklearn.preprocessing import LabelEncoder,OneHotEncoder,StandardScaler
sc = StandardScaler()
le = LabelEncoder()
ohe = OneHotEncoder()
x.iloc[:,[0,2,5]] = sc.fit_transform(pd.DataFrame(x.iloc[:,[0,2,5]]))
dff=pd.DataFrame(ohe.fit_transform(x.iloc[:,[1,4]]).toarray())
x = x.join(dff)
x.drop(x.columns[[1,4]],axis=1,inplace=True)
y = le.fit_transform(y)
from sklearn.model_selection import train_test_split
xtr,xte,ytr,yte = train_test_split(x,y,test_size=0.3)
from sklearn.svm import SVC
model = SVC(kernel="rbf",random_state=0)
model.fit(xtr,ytr)
ypred = model.predict(xte)
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(yte,ypred)
print(cm)
from sklearn.metrics import accuracy_score
acs = accuracy_score(yte,ypred)
print(acs)
from sklearn.metrics import plot_confusion_matrix
plot_confusion_matrix(model,xte,yte)
plt.show()

df = pd.read_csv("insurance.csv")
x = df.iloc[:,[0,1,2,3,5,6]]
y = pd.DataFrame(df.iloc[:,4])
from sklearn.preprocessing import LabelEncoder,OneHotEncoder,StandardScaler
sc = StandardScaler()
le = LabelEncoder()
ohe = OneHotEncoder()
x.iloc[:,[0,2,5]] = sc.fit_transform(pd.DataFrame(x.iloc[:,[0,2,5]]))
dff=pd.DataFrame(ohe.fit_transform(x.iloc[:,[1,4]]).toarray())
x = x.join(dff)
x.drop(x.columns[[1,4]],axis=1,inplace=True)
y = le.fit_transform(y)
from sklearn.model_selection import train_test_split
xtr,xte,ytr,yte = train_test_split(x,y,test_size=0.3)
from sklearn.svm import SVC
model = SVC(kernel="poly",random_state=0)
model.fit(xtr,ytr)
ypred = model.predict(xte)
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(yte,ypred)
print(cm)
from sklearn.metrics import accuracy_score
acs = accuracy_score(yte,ypred)
print(acs)
from sklearn.metrics import plot_confusion_matrix
plot_confusion_matrix(model,xte,yte)
plt.show()

df = pd.read_csv("insurance.csv")
x = df.iloc[:,[0,1,2,3,5,6]]
y = pd.DataFrame(df.iloc[:,4])
from sklearn.preprocessing import LabelEncoder,OneHotEncoder,StandardScaler
sc = StandardScaler()
le = LabelEncoder()
ohe = OneHotEncoder()
x.iloc[:,[0,2,5]] = sc.fit_transform(pd.DataFrame(x.iloc[:,[0,2,5]]))
dff=pd.DataFrame(ohe.fit_transform(x.iloc[:,[1,4]]).toarray())
x = x.join(dff)
x.drop(x.columns[[1,4]],axis=1,inplace=True)
y = le.fit_transform(y)
from sklearn.model_selection import train_test_split
xtr,xte,ytr,yte = train_test_split(x,y,test_size=0.3)
from sklearn.svm import SVC
model = SVC(kernel="sigmoid",random_state=0)
model.fit(xtr,ytr)
ypred = model.predict(xte)
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(yte,ypred)
print(cm)
from sklearn.metrics import accuracy_score
acs = accuracy_score(yte,ypred)
print(acs)
from sklearn.metrics import plot_confusion_matrix
plot_confusion_matrix(model,xte,yte)
plt.show()

df = pd.read_csv("insurance.csv")
x = df.iloc[:,[0,1,2,3,5,6]]
y = pd.DataFrame(df.iloc[:,4])
from sklearn.preprocessing import LabelEncoder,OneHotEncoder,StandardScaler
sc = StandardScaler()
le = LabelEncoder()
ohe = OneHotEncoder()
x.iloc[:,[0,2,5]] = sc.fit_transform(pd.DataFrame(x.iloc[:,[0,2,5]]))
dff=pd.DataFrame(ohe.fit_transform(x.iloc[:,[1,4]]).toarray())
x = x.join(dff)
x.drop(x.columns[[1,4]],axis=1,inplace=True)
y = le.fit_transform(y)
from sklearn.model_selection import train_test_split
xtr,xte,ytr,yte = train_test_split(x,y,test_size=0.3)
from sklearn.svm import SVC
model = SVC(kernel="precomputed",random_state=0)
model.fit(xtr,ytr)
ypred = model.predict(xte)
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(yte,ypred)
print(cm)
from sklearn.metrics import accuracy_score
acs = accuracy_score(yte,ypred)
print(acs)
from sklearn.metrics import plot_confusion_matrix
plot_confusion_matrix(model,xte,yte)
plt.show()

